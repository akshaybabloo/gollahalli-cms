# Generated by Django 2.0 on 2018-01-02 05:41

from django.conf import settings
from django.db import migrations, models
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
        ('blog', '0003_auto_20171110_1419'),
    ]

    operations = [
        migrations.CreateModel(
            name='PostModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('body', models.TextField()),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('meta_title', models.CharField(max_length=70)),
                ('meta_body', models.CharField(max_length=156)),
                ('code_injection_header', models.CharField(max_length=10000)),
                ('code_injection_footer', models.CharField(max_length=10000)),
                ('twitter_card_title', models.CharField(max_length=1000)),
                ('twitter_card_body', models.CharField(max_length=10000)),
                ('twitter_card_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('facebook_card_title', models.CharField(max_length=1000)),
                ('facebook_card_body', models.CharField(max_length=10000)),
                ('facebook_card_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('author', models.ForeignKey(on_delete=None, related_name='blog_post', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.RemoveField(
            model_name='blogmodel',
            name='author',
        ),
        migrations.DeleteModel(
            name='BlogModel',
        ),
    ]
